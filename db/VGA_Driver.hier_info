|VGA_Display
CLOCK_27 => vga_driver:my_vga_driver.CLK
SW[0] => vga_driver:my_vga_driver.RST
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
VGA_HS <= vga_driver:my_vga_driver.HSYNC
VGA_VS <= vga_driver:my_vga_driver.VSYNC
VGA_R[0] <= vga_driver:my_vga_driver.R[0]
VGA_R[1] <= vga_driver:my_vga_driver.R[1]
VGA_R[2] <= vga_driver:my_vga_driver.R[2]
VGA_R[3] <= vga_driver:my_vga_driver.R[3]
VGA_G[0] <= vga_driver:my_vga_driver.G[0]
VGA_G[1] <= vga_driver:my_vga_driver.G[1]
VGA_G[2] <= vga_driver:my_vga_driver.G[2]
VGA_G[3] <= vga_driver:my_vga_driver.G[3]
VGA_B[0] <= vga_driver:my_vga_driver.B[0]
VGA_B[1] <= vga_driver:my_vga_driver.B[1]
VGA_B[2] <= vga_driver:my_vga_driver.B[2]
VGA_B[3] <= vga_driver:my_vga_driver.B[3]


|VGA_Display|vga_driver:my_vga_driver
CLK => PLL:u0.clock_27_clk
RST => PLL:u0.reset_reset
RST => B[0]~reg0.PRESET
RST => B[1]~reg0.PRESET
RST => B[2]~reg0.PRESET
RST => B[3]~reg0.PRESET
RST => G[0]~reg0.PRESET
RST => G[1]~reg0.PRESET
RST => G[2]~reg0.PRESET
RST => G[3]~reg0.PRESET
RST => R[0]~reg0.PRESET
RST => R[1]~reg0.PRESET
RST => R[2]~reg0.PRESET
RST => R[3]~reg0.PRESET
RST => videoOn.ACLR
RST => VSYNC~reg0.ACLR
RST => HSYNC~reg0.ACLR
RST => vPos[0].ACLR
RST => vPos[1].ACLR
RST => vPos[2].ACLR
RST => vPos[3].ACLR
RST => vPos[4].ACLR
RST => vPos[5].ACLR
RST => vPos[6].ACLR
RST => vPos[7].ACLR
RST => vPos[8].ACLR
RST => vPos[9].ACLR
RST => vPos[10].ACLR
RST => vPos[11].ACLR
RST => vPos[12].ACLR
RST => vPos[13].ACLR
RST => vPos[14].ACLR
RST => vPos[15].ACLR
RST => vPos[16].ACLR
RST => vPos[17].ACLR
RST => vPos[18].ACLR
RST => vPos[19].ACLR
RST => vPos[20].ACLR
RST => vPos[21].ACLR
RST => vPos[22].ACLR
RST => vPos[23].ACLR
RST => vPos[24].ACLR
RST => vPos[25].ACLR
RST => vPos[26].ACLR
RST => vPos[27].ACLR
RST => vPos[28].ACLR
RST => vPos[29].ACLR
RST => vPos[30].ACLR
RST => vPos[31].ACLR
RST => hPos[0].ACLR
RST => hPos[1].ACLR
RST => hPos[2].ACLR
RST => hPos[3].ACLR
RST => hPos[4].ACLR
RST => hPos[5].ACLR
RST => hPos[6].ACLR
RST => hPos[7].ACLR
RST => hPos[8].ACLR
RST => hPos[9].ACLR
RST => hPos[10].ACLR
RST => hPos[11].ACLR
RST => hPos[12].ACLR
RST => hPos[13].ACLR
RST => hPos[14].ACLR
RST => hPos[15].ACLR
RST => hPos[16].ACLR
RST => hPos[17].ACLR
RST => hPos[18].ACLR
RST => hPos[19].ACLR
RST => hPos[20].ACLR
RST => hPos[21].ACLR
RST => hPos[22].ACLR
RST => hPos[23].ACLR
RST => hPos[24].ACLR
RST => hPos[25].ACLR
RST => hPos[26].ACLR
RST => hPos[27].ACLR
RST => hPos[28].ACLR
RST => hPos[29].ACLR
RST => hPos[30].ACLR
RST => hPos[31].ACLR
HSYNC <= HSYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE
VSYNC <= VSYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[0] <= R[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[1] <= R[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[2] <= R[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[3] <= R[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[0] <= G[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[1] <= G[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[2] <= G[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[3] <= G[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[0] <= B[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[1] <= B[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[2] <= B[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[3] <= B[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|VGA_Display|vga_driver:my_vga_driver|PLL:u0
clock_27_clk => clock_27_clk.IN1
pixel_clock_clk <= PLL_PLL:pll.c0
reset_reset => reset_reset.IN1


|VGA_Display|vga_driver:my_vga_driver|PLL:u0|PLL_PLL:pll
address[0] => w_select_control.IN0
address[0] => w_select_status.IN0
address[1] => w_select_status.IN1
address[1] => w_select_control.IN1
areset => comb.IN1
c0 <= altpll:sd1.clk
clk => clk.IN2
locked <= wire_sd1_locked.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
read => readdata.IN1
read => readdata.IN1
readdata[0] <= readdata.DB_MAX_OUTPUT_PORT_TYPE
readdata[1] <= readdata.DB_MAX_OUTPUT_PORT_TYPE
readdata[2] <= <GND>
readdata[3] <= <GND>
readdata[4] <= <GND>
readdata[5] <= <GND>
readdata[6] <= <GND>
readdata[7] <= <GND>
readdata[8] <= <GND>
readdata[9] <= <GND>
readdata[10] <= <GND>
readdata[11] <= <GND>
readdata[12] <= <GND>
readdata[13] <= <GND>
readdata[14] <= <GND>
readdata[15] <= <GND>
readdata[16] <= <GND>
readdata[17] <= <GND>
readdata[18] <= <GND>
readdata[19] <= <GND>
readdata[20] <= <GND>
readdata[21] <= <GND>
readdata[22] <= <GND>
readdata[23] <= <GND>
readdata[24] <= <GND>
readdata[25] <= <GND>
readdata[26] <= <GND>
readdata[27] <= <GND>
readdata[28] <= <GND>
readdata[29] <= <GND>
readdata[30] <= <GND>
readdata[31] <= <GND>
reset => prev_reset.ACLR
reset => pfdena_reg.PRESET
reset => _.IN1
write => wire_pfdena_reg_ena.IN1
writedata[0] => w_reset.IN1
writedata[1] => pfdena_reg.DATAIN
writedata[2] => ~NO_FANOUT~
writedata[3] => ~NO_FANOUT~
writedata[4] => ~NO_FANOUT~
writedata[5] => ~NO_FANOUT~
writedata[6] => ~NO_FANOUT~
writedata[7] => ~NO_FANOUT~
writedata[8] => ~NO_FANOUT~
writedata[9] => ~NO_FANOUT~
writedata[10] => ~NO_FANOUT~
writedata[11] => ~NO_FANOUT~
writedata[12] => ~NO_FANOUT~
writedata[13] => ~NO_FANOUT~
writedata[14] => ~NO_FANOUT~
writedata[15] => ~NO_FANOUT~
writedata[16] => ~NO_FANOUT~
writedata[17] => ~NO_FANOUT~
writedata[18] => ~NO_FANOUT~
writedata[19] => ~NO_FANOUT~
writedata[20] => ~NO_FANOUT~
writedata[21] => ~NO_FANOUT~
writedata[22] => ~NO_FANOUT~
writedata[23] => ~NO_FANOUT~
writedata[24] => ~NO_FANOUT~
writedata[25] => ~NO_FANOUT~
writedata[26] => ~NO_FANOUT~
writedata[27] => ~NO_FANOUT~
writedata[28] => ~NO_FANOUT~
writedata[29] => ~NO_FANOUT~
writedata[30] => ~NO_FANOUT~
writedata[31] => ~NO_FANOUT~


|VGA_Display|vga_driver:my_vga_driver|PLL:u0|PLL_PLL:pll|PLL_PLL_stdsync_sv6:stdsync2
clk => clk.IN1
din => din.IN1
dout <= PLL_PLL_dffpipe_l2c:dffpipe3.q
reset_n => reset_n.IN1


|VGA_Display|vga_driver:my_vga_driver|PLL:u0|PLL_PLL:pll|PLL_PLL_stdsync_sv6:stdsync2|PLL_PLL_dffpipe_l2c:dffpipe3
clock => dffe6a[0].CLK
clock => dffe5a[0].CLK
clock => dffe4a[0].CLK
clrn => dffe6a[0].ACLR
clrn => dffe4a[0].ACLR
clrn => dffe5a[0].ACLR
d[0] => dffe4a[0].DATAIN
q[0] <= dffe6a[0].DB_MAX_OUTPUT_PORT_TYPE


|VGA_Display|vga_driver:my_vga_driver|PLL:u0|PLL_PLL:pll|altpll:sd1
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll.ARESET
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll.LOCKED
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


